name: Lint and Test

# Controls when the action will run.
on:
  push:
    branches:
      - "**"
    tags:
      - "v**"
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5
      - name: Use Node.js 14.x
        uses: actions/setup-node@v6
        with:
          node-version: 14.x
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Prepare Environment
        run: |
          yarn
          yarn build
        env:
          CI: true
      - name: Run Linting
        run: |
          yarn lint
        env:
          CI: true

  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node_version: ["10", "12", "14", "16", "18", "20", "22"]
        os: [ubuntu-latest] # [windows-latest, macOS-latest]
    timeout-minutes: 10
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node_version }}
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Prepare Environment
        run: |
          yarn install --ignore-engines
          yarn build
        env:
          CI: true
      - name: Run unit tests and collect coverage
        run: |
          yarn unit --coverage=true
        env:
          CI: true
      - name: Send coverage
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
